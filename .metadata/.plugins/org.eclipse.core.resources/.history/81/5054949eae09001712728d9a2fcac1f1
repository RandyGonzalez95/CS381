/*
 * Aspect.cpp
 *
 *  Created on: Mar 7, 2017
 *      Author: randygonzalez
 */


#include "Aspect.h"

Aspect::Aspect()
{

}

Aspect::Aspect(Entity381* ent)
{
	entity = ent;
}

Aspect::~Aspect()
{

}

void Aspect::Tick(float dt)
{

}

PhysicsAspect::PhysicsAspect(void)
{

}

PhysicsAspect::PhysicsAspect(Entity381* ent)
{
	entity = ent;
}


PhysicsAspect::~PhysicsAspect()
{

}

void PhysicsAspect::UpdatePostion()
{

}

void PhysicsAspect::Tick(float dt)
{
	Ogre::Quaternion shipHeading = entity->ogreSceneNode->getOrientation();
	Ogre::Vector3 dir = Ogre::Vector3::UNIT_X;
	Ogre::Vector3 move = shipHeading * dir;


	//entity->position = move + (entity->velocity*dt);
	//entity->desiredHeading = shipHeading.y *cos(entity->desiredHeading);


	entity->position = (entity->position) + (entity->velocity*dt);
	entity->position *= move;

	//entity->ogreSceneNode->setPosition(entity->ogreSceneNode->getOrientation() * Ogre::Vector3::UNIT_X* dt);


}

RenderableAspect::RenderableAspect()
{

}

RenderableAspect::RenderableAspect(Entity381* ent)
{
	entity = ent;
}

RenderableAspect::~RenderableAspect()
{

}

void RenderableAspect::RenderBoat()
{
	//if(entity->isMoving)
	//{
		entity->ogreSceneNode->translate(entity->position, Ogre::Node::TS_LOCAL);
		entity->ogreSceneNode->rotate(Ogre::Vector3::UNIT_Y, Ogre::Degree(entity->desiredHeading*0.1f));
	//}

	//entity->ogreSceneNode->setPosition(entity->position);
	//entity->ogreSceneNode->yaw(Ogre::Degree(0.1 * entity->desiredHeading));
}


void RenderableAspect::Tick(float dt)
{
	RenderBoat();
}
