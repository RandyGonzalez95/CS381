/*
 * Aspect.cpp
 *
 *  Created on: Mar 7, 2017
 *      Author: randygonzalez
 */


#include "Aspect.h"

Aspect::Aspect()
{

}

Aspect::Aspect(Entity381* ent)
{
	entity = ent;
}

Aspect::~Aspect()
{

}

void Aspect::Tick(float dt)
{

}

PhysicsAspect::PhysicsAspect(void)
{

}

PhysicsAspect::PhysicsAspect(Entity381* ent)
{
	entity = ent;
}


PhysicsAspect::~PhysicsAspect()
{

}

void PhysicsAspect::UpdatePostion()
{

}

void PhysicsAspect::Tick(float dt)
{
	Ogre::Quaternion shipHeading = entity->ogreSceneNode->getOrientation();
	Ogre::Vector3 dir = Ogre::Vector3::UNIT_X;

	entity->position = entity->position + (entity->velocity *dt);
	//entity->ogreSceneNode->setPosition(entity->position);

}

RenderableAspect::RenderableAspect()
{

}

RenderableAspect::RenderableAspect(Entity381* ent)
{
	entity = ent;
}

RenderableAspect::~RenderableAspect()
{

}

void RenderableAspect::RenderBoat()
{
	entity->ogreSceneNode->setPosition(entity->position);
	//entity->ogreSceneNode->translate(entity->position, Ogre::Node::TS_LOCAL);
	entity->ogreSceneNode->yaw(Ogre::Degree(0.1 * entity->desiredHeading));
}


void RenderableAspect::Tick(float dt)
{
	RenderBoat();
}
